// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    Inc16(in=outc, out=outp1);
    Not(in=reset, out=nreset);
    Not(in=load, out=nload);
    Not(in=inc, out=ninc);
    
    And(a=nreset, b=nload, out=s2);
    Or(a=load, b=ninc, out=loadORninc);
    And(a=nreset, b=loadORninc, out=s1);
    Mux4Way16(a[0..15]=false, b=in, c=outp1, d=outc, sel[0]=s1, sel[1]=s2, out=inreg);

    And(a=reset, b=nload, out=resetANDnload);
    Or(a=load, b=inc, out=loadORinc);
    Or(a=loadORinc, b=resetANDnload, out=loadc);

    Register(in=inreg, load=loadc, out=outc);
    
    And16(a=outc, b[0..15]=true, out=out); 
    
}
